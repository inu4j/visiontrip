var self_module = angular.module('starter.controllers', ['ionic','ngCordova']);// 사운드를 위한 서비스self_module.service('soundService', function(){    var soundService = {      myMedia:null,      play:function (src){        var isAndroid = ionic.Platform.isAndroid();        var add_str = (isAndroid ) ? "/android_asset/www/" : "";        var sound_src = add_str + src;        var self = this;        self.stop();        self.myMedia =  (isAndroid ) ?  new Media(sound_src, null, null) : new Audio(sound_src);        self.myMedia.play();      },      stop:function(){        var self = this;        if (self.myMedia){          if (ionic.Platform.isAndroid()) {self.myMedia.release();} else { self.myMedia.pause();}        }      },      pause:function(){        var self = this;        if (self.myMedia){          if (ionic.Platform.isAndroid()) {self.myMedia.pause();} else { self.myMedia.pause();}        }      },      replay:function(){        var self = this;        self.myMedia.play();      }    };    return soundService;});//홈 self_module.controller('HomeCtrl',function($scope){  $scope.app_version = appVersion; });// 사이드 메뉴용 컨트롤러self_module.controller('AppCtrl', function($scope,$rootScope, $translate, soundService, $ionicPlatform, $ionicSideMenuDelegate, $state, Get_myLang, Get_targetLang) {  //모든 사운드 OFF      $scope.all_sound_stop = function(){        soundService.stop();      }  //안드로이드 백버튼 처리.     $scope.$deregisterBackButton = $ionicPlatform.registerBackButtonAction(function(){        soundService.stop();        if ($ionicSideMenuDelegate.isOpen()) {          navigator.app.exitApp();         }else {          $ionicSideMenuDelegate.toggleLeft();        }      }, 300);    // 메뉴 하단에 들어갈 선택언어       var select_target = window.localStorage.getItem("target_language");       Get_myLang.getData().then(function(data){        for (item in data.setting_target) {          if ( data.setting_target[item].ID == select_target ){             $scope.target_lang = data.setting_target[item].name;             // $scope.barBackUrl = "../locale/"+ select_target +"/menu_back.png";             $scope.barBackUrl = select_target ;             console.log("Menu Back Url = " + $scope.barBackUrl);          }        }       });      Get_targetLang.getData(select_target).then(function(data){         $scope.target_title = data.target_language;      });      // 언어 변경시 메뉴 타이틀 백이미지 변경학.       $rootScope.$on('$translateChangeSuccess', function () {        console.log("translateChangeSuccess _ Main");        $scope.target_lang = "";                var select_target = window.localStorage.getItem("target_language");         Get_myLang.getData().then(function(data){          for (item in data.setting_target) {            if ( data.setting_target[item].ID == select_target ){             $scope.target_lang = data.setting_target[item].name;             // $scope.barBackUrl ="../locale/"+ select_target +"/menu_back.png";             $scope.barBackUrl = select_target ;             console.log("Menu Back Url = " + $scope.barBackUrl);            }          }        });        Get_targetLang.getData(select_target).then(function(data){         $scope.target_title = data.target_language;      });    });});// 회화 정보self_module.controller('lang_list', function($scope,  $rootScope, soundService, $translate, Get_myLang, Get_targetLang) {    $scope.$on('$ionicView.enter', function(){        console.log ("language View Enter");        var select_target = window.localStorage.getItem("target_language");         // var select_target = "target_km-KH";         Get_myLang.getData().then(function(data){   // My Locale json 읽기.                      $scope.missiondig_data = data.MissionDig;            $scope.missionword_data = data.MissionWord;            $scope.dialog_data = data.Dialog;            $scope.word_data = data.Word;         });        if ($translate.use() == "ko-KR"){    // 한글의 경우만 독음 정보를 가져온다.           Get_targetLang.getData(select_target).then(function(data){ // taget json 의 한글 독음.             // $scope.missiondig_read = data.MissionDig_read;            // $scope.missionword_read = data.MissionWord_read;            // $scope.dialog_read = data.Dialog_read;                  // $scope.word_read = data.Word_read;            var temp_array = {};            $scope.item_read = function(category, cat_ID, ID){              if (category == "MissionDig_read") {temp_array = data.MissionDig_read;}              if (category == "MissionWord_read") {temp_array = data.MissionWord_read;}              if (category == "Dialog_read") {temp_array =  data.Dialog_read;}              if (category == "Word_read") {temp_array = data.Word_read;}                for (i in temp_array){                  if (temp_array[i].cat_ID == cat_ID){                    for (j in temp_array[i].data ){                      if ( temp_array[i].data[j].ID == ID){                           // return j+ "=" +category + "/"+ cat_ID+"/"+ temp_array[i].data[j].read;                           return temp_array[i].data[j].read;                        }                      }                  }                }              };            });        };    });    $scope.gotoTop = function(){      angular.element(element)[0].scrollTop = 0;    }    $scope.isNull = function(id){      if (id=="") {        return "img/play-icon-none.png";      }else{        return "img/play-icon.png";      }    };      $scope.playItem = function(index){      var select_target = window.localStorage.getItem("target_language");       var src = "locale/"+select_target+"/audio/"+ index +".mp3";      console.log("Click Language = "+ src);      soundService.play(src);    };});// 복음제시 페이지. self_module.controller('GospelCtrl', function($scope, $ionicSlideBoxDelegate, soundService, $rootScope,Get_myLang, Get_targetLang) {  console.log('Enter Gospel Page');var select_target = window.localStorage.getItem("target_language");  if (select_target == "km-KH"){    $scope.gospel=        [{img:'locale/km-KH/img/gospel_01.jpg' },        {img:'locale/km-KH/img/gospel_02.jpg' },        {img:'locale/km-KH/img/gospel_03.jpg' },        {img:'locale/km-KH/img/gospel_04.jpg' },        {img:'locale/km-KH/img/gospel_05.jpg' },        {img:'locale/km-KH/img/gospel_06.jpg' },        {img:'locale/km-KH/img/gospel_07.jpg' },        {img:'locale/km-KH/img/gospel_08.jpg' },        {img:'locale/km-KH/img/gospel_09.jpg' },        {img:'locale/km-KH/img/gospel_10.jpg' },        {img:'locale/km-KH/img/gospel_11.jpg' },        {img:'locale/km-KH/img/gospel_12.jpg' }];  } else {    $scope.gospel=        [{img:'img/gospel-1.jpg' },        {img:'img/gospel-2.jpg' },        {img:'img/gospel-3.jpg' },        {img:'img/gospel-4.jpg' },        {img:'img/gospel-5.jpg' },        {img:'img/gospel-6.jpg' },        {img:'img/gospel-7.jpg' },        {img:'img/gospel-8.jpg' },        {img:'img/gospel-9.jpg' },        {img:'img/gospel-10.jpg' },        {img:'img/gospel-11.jpg' },        {img:'img/gospel-12.jpg' }];  }    // 페이지에 들어올때 새롭게 파싱하기.     $scope.$on('$ionicView.enter', function(){      // My Locale json 읽기.          var select_target = window.localStorage.getItem("target_language");          Get_myLang.getData().then(function(data){                $scope.gospel_msg = data.gospel_msg;         });         Get_targetLang.getData(select_target).then(function(data){                $scope.gospel_target_msg = data.gospel_target_msg;         });        play_gospel(0);        $scope.slideIndex = 0;        });       $scope.$on('$ionicView.leave', function(){        soundService.stop();          });    // Called each time the slide changes    $scope.slideChanged = function(index) {      $scope.slideIndex = index;      console.log("slide Change = " + $scope.slideIndex);        play_gospel($scope.slideIndex);    };    $scope.slide_prev = function(index){      $scope.slideIndex = index;      $scope.slideIndex--;      if ($scope.slideIndex == -1) $scope.slideIndex = 11;      $ionicSlideBoxDelegate.slide($scope.slideIndex);        play_gospel($scope.slideIndex);    };    $scope.slide_next = function(index){      $scope.slideIndex = index;      $scope.slideIndex++;      if ($scope.slideIndex == 12) $scope.slideIndex = 0;      $ionicSlideBoxDelegate.slide($scope.slideIndex);        play_gospel($scope.slideIndex);    };          $scope.play = function(index) {        $scope.slideIndex = index;        console.log('play index ='+ $scope.slideIndex);      //      var myAudio = document.getElementById("myAudio");        play_gospel($scope.slideIndex);    };    $scope.playflag = true;  // 기본값 플레이 상태.      $scope.soundControl = function(){      if ($scope.playflag == true){        soundService.pause();         $scope.playflag = false;      }else{        soundService.replay();         $scope.playflag = true;            }    }      var select_target = window.localStorage.getItem("target_language");       function play_gospel(no) {        var src = "locale/"+select_target+"/audio/gospel_"+ (no+1) +".mp3";        if (window.localStorage.getItem("soundFlag") == "true"){          soundService.play(src);        }      };     // 하단 중앙에 사운드 ON/Off 토글 버튼    // 초기값이 없을때 on 으로 셋팅      if ( window.localStorage.getItem("soundFlag")!="false" ){        $scope.soundflag = true;           window.localStorage.setItem("soundFlag" ,"true");      };    // 토글 버튼 구현.  할 때 마다 LocalStorage 에 저장한다.       $scope.soundSwitch = function(){      if (window.localStorage.getItem("soundFlag")=="true"){        $scope.soundflag = false;           window.localStorage.setItem("soundFlag" ,"false");        soundService.stop();            }else{        $scope.soundflag = true;           window.localStorage.setItem("soundFlag" ,"true");      }      }});// 찬양리스트 self_module.controller('PlaylistsCtrl', function($scope, Get_targetLang, $translate) {    $scope.$on('$ionicView.enter', function(){              var select_target = window.localStorage.getItem("target_language");       Get_targetLang.getData(select_target).then(function(data){        for (i in data.playlists){          if (data.playlists[i].locale == $translate.use())            $scope.playlists = data.playlists[i].data;        }      });    });});// 찬양 한 곡 / 듣기self_module.controller('PlaylistCtrl', function($scope, $stateParams, soundService) {  $scope.song_no = $stateParams.playlistId;    $scope.btn_play = true;  var select_target = window.localStorage.getItem("target_language");   $scope.songplay = function(){    var src = "locale/"+select_target+"/audio/"+ $scope.song_no +".mp3";    soundService.play(src);    $scope.btn_play = false;    $scope.btn_stop = true;  };  $scope.songstop = function(){    $scope.btn_play = true;    $scope.btn_stop = false;    soundService.stop();  }  $scope.locale = select_target;   $scope.$on('$destroy', function () {    soundService.stop();    });});//국가 정보 제공. self_module.controller('ContryCtrl', function($scope, Get_myLang, Get_targetLang, $ionicSlideBoxDelegate){    // 페이지에 들어올때 새롭게 파싱하기.     $scope.$on('$ionicView.enter', function(){                var select_target = window.localStorage.getItem("target_language");         Get_targetLang.getData(select_target).then(function(data){                 $scope.country_info = data.country_information;             $ionicSlideBoxDelegate.update();        });    });});//단기선교 메뉴얼 제공. self_module.controller('ManualCtrl', function($scope){  $scope.information = [  { title:'비전트립이란?',     img:'img/manual_1.jpg',    content:'선교의 여러가지 형태가 있지만, 최근 가장 많이 실시되는 것은 <b>비전트립</b>이다.<br><br> 비전트립은 거의 평생 선교지에서 사는 장기선교나 1~3년의 단기선교와 달리, 1~2주 정도의 짧은 기간으로 선교지를 방문하고, 선교사역을 감당하는 여행형태의 선교이다. 과거에 비해서 항공교통의 발달과 비용이 많이 저렴해 지면서 부담없이 선교지를 방문하게 된 것이다. <br><br>한국에서 <b>1년에 1만개가 넘는 비전트립팀</b>이 해외로 나가고 있고, 엄청난 비용이 든다. 이에 대해서 찬반논쟁이 있기는 하지만, 이는 이 시대에 아주 필요하고 효율적인 전략임은 분명하다. 다만 어떻게 하는가가 중요한 문제일 것이다.'   },  { title:'준  비',     img:'img/manual_2.jpg',     content:'비전트립은 우리가 아니라 선교현지에 있는 <b>그들을 위하여</b> 가는 것이다. 그러므로 그들에게 무엇이 필요하며, 현지 선교사님에게 어떤 도움이 될 것인가를 집중하여야 한다.  그렇지 않으면, 오히려 선교현지에 방해가 되어버리는 일이 발생해 버릴 것이다.  그러므로 첫번째로 중요한 것은 준비이다. <ol><li><b>비전공유하기</b><br>비전트립을 왜 가는지에 대한 성경적인 근거와 하나님의 마음을 품으며, 멤버들이 함께 모여서 기도하며 비전을 공유한다.</li><li><b>선교현지에 대한 연구</b><br>비전트립을 가는 곳에 대한 기본적인 정보가 있어야 한다. 우리가 살아온 이 곳과 전혀 다른 문화속에서 자라온 그들을 만나기 때문에, 그들의 가치관, 세계관, 민족성을 이해하지 못하면 그들을 만날수 없다. 그것을 위해서 그들의 역사, 중요한 사건, 정치, 경제수준, 문화 등을 연구해야 한다.</li></ol>'  },  { title:'사역 정하기',     img:'img/manual_3.jpg',     content:'현지 선교사님과 긴밀하게 연락을 하면서 필요한 것이 무엇인가를 구체적으로 파악해야 한다. 때로는 아무것도 준비하지 않는 것이 최선의 준비일 수도 있다. 그들에게 필요없고, 오히려 싫어할 일을 우리가 좋다고 해서 준비하는 경우들이 있기 때문이다. 방문하게 되는 대상의 연령과 경제수준, 건강, 필요한 것이 무엇인가를 고려해서 비전트립팀이 해야할 일을 먼저 정해야 한다. '  },  { title:'팀 조직하기',     img:'img/manual_4.jpg',     content:'비전트립은 2박 3일의 수련회가 아니다. 1-2주간 함께 먹고 자며 공동생활을 하면서 사역을 감당하게 된다. 그곳의 현실은 우리보다 열악하다. 그러므로 팀웍이 좋지 않으면 문제가 생기고, 오히려 마음에 상처를 받을 수도 있다. 그러므로 사전에 팀을 잘 조직하며 팀웍을 위한 철저한 준비를 해야한다. '  },  { title:'예산결정과 모금',     img:'img/manual_5.jpg',     content:'비전트립팀은 멤버 각 개인이 여행을 가는 것이 아니라 해당되는 교회나 단체의 대표로 선교사역을 감당하려 가는 것이다. 그러므로 이에 대해서 책임감을 갖고 준비해야 한다. 필요한 경비도 개인이 일부 부담을 하지만 파송하는 교회가 마음을 함께 할 수 있도록 지원을 받고, 교우들로 하여금 함께 참여하도록 해야한다.'  },  { title:'복음 준비하기',     img:'img/manual_6.jpg',     content:'선교를 가는 가장 본질적인 목적은 <b>복음을 전하는 것</b>이다. 하지만 비전트립은 언어가 가장 큰 문제이다. 이것을 극복하기 위해서 공연이나 여러 가지 활동으로 복음을 전하려 시도한다. 나아가 우리는 그들에게 분명한 복음을 들려줄 필요가 있다. 이것을 위해서 아주 효과적인 도움의 도구가 바로 지금 이 비전트립 앱이다. 이 앱을 활용해서 우리는 그들에게 그들의 언어로 복음을 들려줄 수가 있다. 비전트립 사역을 통해 해야할 가장 중요하고 본질적인 사역이 언어라는 한계때문에 막히는 일이 없도록 이 앱을 통해서 복음을 전해주라.'  },  { title:'현지 사역',     img:'img/manual_7.jpg',     content:'현지에서는 선교사님과 팀리더의 말씀에 반드시 순종하며 잘 따르도록 해야한다. 건강뿐 아니라 어떤 지역은 테러나 정치적인 위험이 있으므로 조심해야 한다. <br><br><ol><li><b>건강</b><br>물과 음식, 기온들이 갑자기 변화되고, 짜여진 일정들을 감당하다보면 건강을 헤칠 위험이 많다. 아프게 되면 팀 전체에게 영향이 가기 때문에 늘 건강을 조심해야 한다.  비전트립 가기전 부터 체력을 키우고, 컨티션 조절을 잘 한다. 현지에 가서 열이 나거나 이상이 있으면 곧바로 보고 하고 처리하도록 한다.</li><li><b>안전</b><br>만약의 사태에 대비하여 현지 선교사님의 직통 연락처과 한국연락처, 한국대사관 등의 정보를 반드시 알고 있어야 한다. </li><li><b>현지중심</b><br>현지에서 어떤 일이 어떻게 일어날지 알 수 없다. 상황에 따른 유연한 대처가 필요하다. 이곳에서 준비한 프로그램이라고 해서 무조건 하는 것이 아니라 현지 상황에 맞추어서 진행해야 한다. </li><li><b>섬김</b><br>선교 현지에 있는 사람들은 우리보다 어리석은 사람이 결코 아니다. 우리보다 미개한 사람이 아니라, 그냥 우리와 다른 문화에 살고 있을 뿐이다. 누가 더 높고 낮음이 없다. 그들을 바라보고 대할 때 마다 그들을 섬기고 존중하는 마음으로 대해야 한다.</li></ol>'  },  { title:'사후관리',     img:'img/manual_8.jpg',     content:'단회적인 여행으로 끝나지 않도록 철저한 사후관리가 필요하다. 그래서 본인 뿐 아니라 교회전체가 지속적인 선교관심을 갖고 땅끝까지 복음을 전하기 위한 지상명령을 수행하도록 도전하여야 한다.<br><br><ol><li><b>보고회</b><br>반드시 해당 교회에 보고서를 작성하고, 보고회를 통해서 선교현황을 보고하고 이를 자료화 하여 보관하도록 한다. </li><li><b>현지와 지속적 연락</b><br>백문이 불여일견 이듯이 한 번 다녀올 사람은 그 곳을 향한 마음이 남 다르다. 이 불이 꺼지지 않도록 지속적으로 그 현지와 소식을 주고 받으며 지속적인 관계가 맺어지도록 한다.  오늘날 SNS는 이를 위해서 매우 훌륭한 도구이다. </li><li><b>손끝선교</b><br>비전트립을 다녀와서 끝이 아니라 오늘날 우리에게 주신 좋은 선교도구인 스마트폰을 활용해서 그들과 지속적인 연락을 주고 받고, 복음의 소식을 나누며, 말씀으로 그들이 양육되어지도록 도와야 한다.</li></ol>'  }   ];});// 설정페이지self_module.controller('SettingCtrl', function($scope,$rootScope,$translate, $ionicPopup, $timeout,Get_myLang, Get_targetLang){  Get_myLang.getData().then(function(data){   // My Locale json 읽기.      $scope.targetlang = data.setting_target;    $scope.mylang = data.setting_mylang;        //대상 언어 select 기본설정    for (item in $scope.targetlang){      if ($scope.targetlang[item].ID == window.localStorage.getItem("target_language")) {        $scope.targetSelect = $scope.targetlang[item];      }    }    //사용자 언어 select 기본설정     for (item in $scope.mylang){      if ($scope.mylang[item].ID == $translate.use()) {        $scope.mySelect = $scope.mylang[item];      }    };  });  $rootScope.$on('$translateChangeSuccess', function (){      console.log("**** translateChangeSuccess ****");      Get_myLang.getData().then(function(data){   // My Locale json 읽기.            $scope.targetlang = data.setting_target;          $scope.mylang = data.setting_mylang;              //대상 언어 select 기본설정          for (item in $scope.targetlang){            if ($scope.targetlang[item].ID == window.localStorage.getItem("target_language")) {              $scope.targetSelect = $scope.targetlang[item];            }          }          //사용자 언어 select 기본설정           for (item in $scope.mylang){            if ($scope.mylang[item].ID == $translate.use()) {              $scope.mySelect = $scope.mylang[item];            }          };        });  });    //타켓 select 바꿀때    $scope.change_Targetlang = function(lang){      window.localStorage.setItem("target_language",lang);      console.log("Select Taeget Language = " +  window.localStorage.getItem("target_language") );            var temp = $translate.use();      $translate.use(temp);    }    //사용자 select 바꿀때    $scope.change_Mylang = function(lang){      $translate.use(lang);      console.log("Select My Language = " + lang);      };});// 사용자 언어 json 파싱용. self_module.factory('Get_myLang', function ($http, $translate,  $q) {    var data = {};    function getDataIfNeeded() {      var select_target = window.localStorage.getItem("target_language");       var json_file = "locale/" + select_target + "/" + $translate.use() +".json";               console.log("My Json = " +  json_file );      return $http({              url: json_file ,              method: "GET",          }).then(function(response) {              data = response.data;              console.log("My Json Calling Success = " +  json_file );              return data;          });      };    return { getData : getDataIfNeeded }});// 타켓 선교지언어 json 파싱용. self_module.factory('Get_targetLang', function ($http, $translate,  $q) {    var data;    function getDataIfNeeded(select_target) {    var json_file = "locale/" + select_target +"/target.json";              return $http({            url: json_file ,            method: "GET",        }).then(function(response) {            data = response.data;            console.log("Target Json Calling Success = " + select_target);            return data;        });      };    return { getData : getDataIfNeeded }});// var myAudio = new Audio();// function audioPlay(str){//   myAudio.src = str;//   myAudio.load();//   myAudio.current=0;//   myAudio.play();// };// function audioStop(){//   console.log("Audio Stop");//     myAudio.pause();//   };